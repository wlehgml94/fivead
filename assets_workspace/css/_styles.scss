@charset 'utf-8';

//setColor
$c_primary: #fff;
$c_bk: #000;
$c_point: #F4733A;
$c_sub_text: #808080;
$c_err: #ff4949;
$c_gray_1: #646464;
$c_gray_2: #acacac;
$c_gray_3: #F5F5F5;

//imageUrl
$images: '../images';
$fonts: '../fonts';

//size
$moSize: 960px;
@mixin desktop {
  @media (min-width: 961px) {
    @content;
  }
}
@mixin desktop_small {
  @media (max-width: 1200px) {
    @content;
  }
}
@mixin mobile {
  @media (max-width: $moSize) {
    @content;
  }
}

@mixin blind {
  position: absolute;
  width: 0;
  height: 0;
  overflow: hidden;
  z-index: -1;
}

@mixin designScroll($gap: 2rem) {
  &::-webkit-scrollbar {
    width: 6px;
  }
  &::-webkit-scrollbar-thumb {
    height: 30%;
    background-color: rgba(109, 117, 124, 0.5);
    border: 1px solid $c_primary;
  }
  &::-webkit-scrollbar-button:vertical:start:decrement,
  &::-webkit-scrollbar-button:vertical:end:decrement {
    height: $gap;
  }
}

@mixin hiddenScroll {
  -ms-overflow-style: none;
  scrollbar-width: none;
  &::-webkit-scrollbar {
    display: none;
  }
}

//text guide
@mixin text2($size, $bold: 400, $line: null) {
  @if ($size == '42') {
    font-size: 4.2rem;
    line-height: 1.4;
  } @else if ($size == '40') {
    font-size: 4rem;
    line-height: 1.2;
  } @else if ($size == '30') {
    font-size: 3rem;
    line-height: 1.5;
  } @else if ($size == '28') {
    font-size: 2.8rem;
    line-height: 1.4;
    letter-spacing: -0.28px;
  }  @else if ($size == '24') {
    font-size: 2.4rem;
    line-height: 1.6;
  } @else if ($size == '18') {
    font-size: 1.8rem;
    line-height: 1.5;
  } @else if ($size == '14') {
    font-size: 1.4rem;
    line-height: 1.6;
  } @else if ($size == '12') {
    font-size: 1.2rem;
    line-height: 1.6;
  } @else {
    font-size: $size;
  }
  font-weight: $bold;
  line-height: $line;
}
/* text style */
@mixin text($size, $bold: 400, $line: null, $spacing: null) {
  font-size: $size;
  font-weight: $bold;
  line-height: $line;
  letter-spacing: $spacing;
}

/* color , opacity */
@mixin textColor($color, $opacity: null) {
  color: $color;
  opacity: $opacity;
}

/* hover */
@mixin hoverStyle($selector: null, $space: true) {
  @media (min-width: 961px) and (hover: hover) {
    @if $selector {
      @if $space {
        &:hover #{$selector} {
          @content;
        }
      } @else {
        &:hover#{$selector} {
          @content;
        }
      }
    } @else {
      &:hover {
        @content;
      }
    }
  }
}